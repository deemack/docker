# jenkins-casc.yaml

jenkins:
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: "admin"
        - id: "dev"
          password: "dev"
  # authorizationStrategy: loggedInUsersCanDoAnything
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "Job/Build:dev"
        - "Job/Cancel:dev"
        - "Job/Read:dev"
        - "Job/Workspace:dev"
        - "Overall/Administer:admin"
        - "Overall/Read:authenticated"
        - "Run/Replay:dev"
        - "Run/Update:dev"

  # make sure our jenkins master has 1 executor so that we can run our pipelines
  numExecutors: 1

  # Add the kubernetes cloud
  clouds:
  - kubernetes:
      containerCap: 10
      containerCapStr: "10"
      #credentialsId: "3ac431ef-0433-4703-ab1c-39ef409fbd41"
      jenkinsUrl: "http://jenkins-service.jenkins.svc.cluster.local:8080"
      name: "kubernetes"
      namespace: "jenkins"
      templates:
      - containers:
        - args: "9999999"
          command: "sleep"
          image: "eclipse-temurin:21-jdk-alpine"
          livenessProbe:
            failureThreshold: 0
            initialDelaySeconds: 0
            periodSeconds: 0
            successThreshold: 0
            timeoutSeconds: 0
          name: "maven"
          workingDir: "/home/jenkins/agent"
        #id: "5e6a7f2d-87f7-49b1-a176-63359b82901f"
        label: "maven"
        name: "maven"
        namespace: "jenkins"
        serviceAccount: "jenkins-admin"
        yamlMergeStrategy: "override"
      webSocket: true

# Set sshHostKeyVerificationStrategy so that we don't have to add to the knownHosts file
security:
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "acceptFirstConnectionStrategy"
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
  jdk:
    installations:
    - name: "jdk"
  maven:
    installations:
    - name: "maven"
      properties:
      - installSource:
          installers:
          - maven:
              id: "3.9.6"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"

# Run the seed job to create the projects
jobs:
  - file: /usr/local/seedjob.groovy
